name: Deploy Backend (prod)

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
      - "infra/**"
      - "VERSION"
  workflow_dispatch:
  workflow_run:
    workflows:
      - "Infra Stack (Terraform)"
    types:
      - completed

env:
  REGION: ${{ vars.GCP_REGION }}
  SERVICE_NAME: ${{ vars.CLOUD_RUN_SERVICE }}

jobs:
  deploy:
    if: github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read VERSION
        id: ver
        shell: bash
        run: |
          echo "version=$(tr -d '\n\r' < VERSION)" >> "$GITHUB_OUTPUT"

      - name: Set variables (safe defaults)
        shell: bash
        run: |
          REGION="${REGION:-europe-west1}"
          SERVICE_NAME="${SERVICE_NAME:-foodlabel-backend}"
          echo "REGION=$REGION" >> "$GITHUB_ENV"
          echo "SERVICE_NAME=$SERVICE_NAME" >> "$GITHUB_ENV"
          echo "VERSION=${{ steps.ver.outputs.version }}" >> "$GITHUB_ENV"
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_ENV"
          echo "AR_IMAGE=${REGION}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/foodlabel-repo/${SERVICE_NAME}" >> "$GITHUB_ENV"

      - name: Auth to Google Cloud (WIF - PROD)
        if: ${{ secrets.GCP_WIF_PROVIDER_PROD != '' && secrets.GCP_SA_PROD != '' }}
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER_PROD }}
          service_account: ${{ secrets.GCP_SA_PROD }}

      - name: Auth to Google Cloud (WIF - SHARED)
        if: ${{ (secrets.GCP_WIF_PROVIDER_PROD == '' || secrets.GCP_SA_PROD == '') && secrets.GCP_WORKLOAD_IDENTITY_PROVIDER != '' && secrets.GCP_SERVICE_ACCOUNT_EMAIL != '' }}
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Fail if no WIF secrets configured
        if: ${{ (secrets.GCP_WIF_PROVIDER_PROD == '' || secrets.GCP_SA_PROD == '') && (secrets.GCP_WORKLOAD_IDENTITY_PROVIDER == '' || secrets.GCP_SERVICE_ACCOUNT_EMAIL == '') }}
        run: |
          echo "::error::No valid WIF secrets found.
          Either set (GCP_WIF_PROVIDER_PROD & GCP_SA_PROD) for prod OR
          (GCP_WORKLOAD_IDENTITY_PROVIDER & GCP_SERVICE_ACCOUNT_EMAIL) for shared."
          exit 1

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker auth (Artifact Registry)
        shell: bash
        run: |
          gcloud auth configure-docker "${REGION}-docker.pkg.dev" -q

      - name: Build & Push image
        shell: bash
        run: |
          docker build             -t "${AR_IMAGE}:v${VERSION}"             -t "${AR_IMAGE}:sha-${SHORT_SHA}"             -f backend/Dockerfile .
          docker push "${AR_IMAGE}:v${VERSION}"
          docker push "${AR_IMAGE}:sha-${SHORT_SHA}"

      - name: Ensure Cloud Run service exists (idempotent)
        shell: bash
        run: |
          SVC="${SERVICE_NAME}"
          if ! gcloud run services describe "$SVC" --region "${REGION}" >/dev/null 2>&1; then
            echo "Creating Cloud Run service $SVC"
            gcloud run deploy "$SVC"               --image "${AR_IMAGE}:v${VERSION}"               --region "${REGION}"               --allow-unauthenticated
          else
            echo "Service $SVC already exists."
          fi

      - name: Deploy to Cloud Run (update)
        shell: bash
        run: |
          SVC="${SERVICE_NAME}"
          gcloud run deploy "$SVC"             --image "${AR_IMAGE}:v${VERSION}"             --region "${REGION}"             --allow-unauthenticated             --labels "app=foodlabel,env=prod,version=${VERSION},commit=${SHORT_SHA}"
