name: Deploy Backend (Dev/Acc/Prod)

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/deploy_backend_matrix.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev, acc, prod]
    permissions:
      contents: read
      id-token: write
    environment: ${{ matrix.env }}

    steps:
      - uses: actions/checkout@v4

      - name: Resolve config
        run: |
          echo "ENV=${{ matrix.env }}" >> $GITHUB_ENV
          echo "REGION=${{ vars.GCP_REGION }}" >> $GITHUB_ENV
          echo "PROJECT=${{ secrets.GCP_PROJECT_ID }}" >> $GITHUB_ENV
          echo "WIF_PROVIDER=${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}" >> $GITHUB_ENV
          echo "WIF_SA=${{ secrets.GCP_RUN_SA }}" >> $GITHUB_ENV
          echo "REPO=backend" >> $GITHUB_ENV

      - name: Apply defaults
        run: |
          : "${REGION:=europe-west1}"
          echo "REGION=$REGION" >> $GITHUB_ENV

      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.WIF_SA }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT }}

      - name: Configure docker for Artifact Registry
        run: gcloud auth configure-docker "${REGION}-docker.pkg.dev" --quiet

      - name: Build & Push image
        run: |
          IMAGE="${REGION}-docker.pkg.dev/${PROJECT}/${REPO}/backend:${ENV}"
          docker build -t "$IMAGE" backend
          docker push "$IMAGE"

      - name: Deploy to Cloud Run
        run: |
          SERVICE="foodlabel-backend-${ENV}"
          IMAGE="${REGION}-docker.pkg.dev/${PROJECT}/${REPO}/backend:${ENV}"
          gcloud run deploy "$SERVICE" \
            --region "$REGION" \
            --project "$PROJECT" \
            --image "$IMAGE" \
            --allow-unauthenticated \
            --set-env-vars "ENV=${ENV},POLICY_FILE=policy_v2.json" \
            --update-secrets "JWT_SECRET=jwt-secret-${ENV}:latest,DATABASE_URL=database-url-${ENV}:latest"
